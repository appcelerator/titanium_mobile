---
name: Titanium.App.iOS.SearchableIndex
description: |
    The SearchableIndex module is used to add or remove Ti.App.iOS.SearchableItem object from the device search index. 
    To effectively add and remove information from the iOS search index you will need to use the below listed modules:

    * Ti.App.iOS.SearchableItemAttributeSet - Used to create meta data related to the Titanium.App.iOS.SearchableItem
    * Ti.App.iOS.SearchableItem - Used to assemble meta data into a unique object package to be used by Ti.App.iOS.SearchableIndex     
    * Ti.App.iOS.SearchableIndex  - Used to add and remove Ti.App.iOS.SearchableItem objects to the device search index

    To use this feature make sure you have a compatible device running iOS 9 or later.

extends: Titanium.Proxy
platforms: [iphone,ipad]
since: "4.3.0"
createable: true
methods:
  - name: isSupported
    summary: Indicates whether indexing is supported by the device.
    returns:
        type: Boolean
    platforms: [iphone, ipad]
    osver: {ios: {min: "9.0"}}       

  - name: AddToDefaultSearchableIndex
    summary: |
        Adds an array of Titanium.App.iOS.SearchableItem to the default search index.
    parameters:
      - name: Array
        summary: Provides an array of Titanium.App.iOS.SearchableItem to be added to the default search index.
        type: Array<Titanium.App.iOS.SearchableItem>    
      - name: callback
        summary: Function to invoke on success or failure of add the array Titanium.App.iOS.SearchableItem to the default search index. 
        type: Callback<Dictionary>
    platforms: [iphone, ipad]
    osver: {ios: {min: "9.0"}}           

  - name: deleteAllSearchableItems
    summary: |
        Removes all search items added by the application.
    parameters:
      - name: callback
        summary: Function to invoke on success or failure of deleting all search items. 
        type: Callback<Dictionary>
    platforms: [iphone, ipad]
    osver: {ios: {min: "9.0"}}   

  - name: deleteAllSearchableItemByDomainIdenifiers
    summary: |
        Removes search items based on an array of domainIdentifiers.
    parameters:
      - name: Array
        summary: Provides an array of domainIdentifiers to be removed from the default search index.
        type: Array<String>    
      - name: callback
        summary: Function to invoke on success or failure of removing search items from the default search index. 
        type: Callback<Dictionary>
    platforms: [iphone, ipad]
    osver: {ios: {min: "9.0"}}   

  - name: deleteSearchableItemsByIdentifiers
    summary: |
        Removes search items based on an array of identifiers.
    parameters:
      - name: Array
        summary: Provides an array of identifiers to be removed from the default search index.
        type: Array<String>    
      - name: callback
        summary: Function to invoke on success or failure of removing search items from the default search index. 
        type: Callback<Dictionary>
    platforms: [iphone, ipad]
    osver: {ios: {min: "9.0"}}    
examples:
  - title: Creating a new SearchableIndex Example
    example: |
        The following example demonstrates how to create a new Ti.App.iOS.SearchableItem and 
        add a Ti.App.iOS.SearchableItemAttributeSet. The Ti.App.iOS.SearchableItem is then
        Ti.App.iOS.SearchableIndex is used to add the Ti.App.iOS.SearchableItem to the default search index.
                
        #### app.js
            
            var searchItems = [];
            var itemAttr = Ti.App.iOS.createSearchableItemAttributeSet({
                itemContentType:"public.image",
                title:"Titanium Core Spotlight Tutorial",
                contentDescription:"Tech Example \nOn: " + String.formatDate(new Date(),"short"),
                keywords:["Mobile","Appcelerator","Titanium"]
            });

            var item = Ti.App.iOS.createSearchableItem({
                identifier:"my-id",
                domainIdentifier:"com.mydomain",
                attributeSet:itemAttr
            });
            searchItems.push(item); 
            
            var indexer = Ti.App.iOS.createSearchableIndex();

            indexer.AddToDefaultSearchableIndex(searchItems,function(e){
                if(e.success){
                    alert("Press the home button and now search for your keywords");
                }else{
                    alert("Errored: " + JSON.stringify(e.error));
                }
            });         

            
