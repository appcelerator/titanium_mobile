# Titanium SDK 3.4.0 General Availability

##### Contents

  * [About This Release](#about)
    * [Alloy 1.5.0](#alloy)
    * [Android L Support](#android)
    * [iOS and Xcode Support](#ios)
    * [Studio 3.4.0](#studio)
    * [Titanium CLI 3.4.0](#cli)
  * [Notice of Feature and Behavior Changes](#changes)
    * [Android Platform](#deprecated_android)
      * [Activity Lifecycle Events](#old_lifecycle)
    * [iOS Platform](#deprecated_ios)
      * [Geolocation Permission](#permission)
      * [Register for User Notifications](#register)
  * [New Features](#features)
    * [Android Platform](#new_android)
      * [Activity Lifecycle Callbacks](#new_lifecycle)
      * [HTTPClient file property](#http_file)
      * [TabGroup Activity](#tabgroup_activity)
      * [Window theme property](#window_theme)
    * [iOS Platform](#new_ios)
      * [Assets for iPhone 6 and iPhone 6 Plus](#assets)
      * [Camera](#camera)
      * [Geolocation](#geolocation)
      * [Interative Local Notifications](#interactive)
      * [Touch ID Module](#touch_id)
  * [Known Issues](#known_issues)
    * [Devices Window Launched Instead of Organizer Window](#devices_window)
    * [iOS Simulator Issues](#ios_sim)
  * [API Changes](#apis) 
    * [New APIs](#new_apis)
    * [Deprecated APIs](#deprecated_apis)
    * [Removed APIs](#removed_apis)

<a name="about"></a>

## About This Release

This is the general availability (GA) release version of the Titanium SDK 3.3.0. This Release introduces a number of new features.  See [New Features](#features) for a summary of new features in this release.

Note that this release includes feature and behavior changes. See [Notice of Feature and Behavior Changes](#changes) for details.

This release includes over 50 bug fixes and improvements, see the [full list of issues that were addressed in Release 3.4.0](https://jira.appcelerator.org/issues/?filter=16132)

<a name="alloy"></a>
### Alloy 1.5.0

This Release coincides with the release of Alloy 1.5.0.

**Summary of Changes:**

  * Remove the sample widgets from the Alloy GitHub repository.
  * Deprecate the `localStorage` sync adapter.  Use the `properties` sync adapter instead.
  * Update the moment.js library to version 2.7.0.
  * Data binding enhancements:
    * Add data binding support for Pickers.
    * Support complex binding notation, such as binding more than one model attribute to an XML attribute.
  * XML Markup/TSS enhancements:
    * Support setting ActionBar properties in XML and TSS using the `ActionBar` element.
    * Support `<KeyboardToolbar/>` as a child tag of the `<TextArea/>` object to set the `keyboardToolbar` property.
    * Support `<AndroidView/>` as a child tag of the `<AlertDialog/>` and `<OptionDialog/>` objects to set the `androidView` property.
    * Support the localization function `L()` with the Label's text attribute or as node text in XML markup.
    * Allow spaces in the comma-delimited values of the `platform` attribute.

For more details, see the Alloy [Changelog](https://github.com/appcelerator/alloy/blob/1_5_X/CHANGELOG.md).

<a name="android"></a>
### Android L Support

This Release does not officially support the Android L SDK, since it is in beta. However, a number of bugs have been fixed to support the Android L SDK, and you can build and install Titanium applications to devices running Android L.  You cannot build a Titanium application against the Android L SDK using this Release.

To target a build using the Android L SDK, you need to use a pre-release version of the Titanium SDK 3.5.0.  You are encouraged to file bugs if you encounter issues compiling or running Titanium applications with the L SDK.

<a name="ios"></a>
### iOS and Xcode Support

As of this Release, the Titanium SDK only supports the iOS 8 SDK and Xcode 6 to build iOS applications for devices running iOS 8 and iOS 7.x.  Devices running iOS 6.x are no longer officially supported. 

Note that Xcode 6 requires Mac OS X 10.8.4 (Mavericks) and later.

<a name="studio"></a>
### Studio 3.4.0

This Release coincides with the release of Studio 3.4.0.

**Summary of Changes:**

  * Support building a Titanium application with the iOS 8 SDK and Xcode 6.
  * Update content assist to support shorthand notation for left and right navigation buttons.
  * Add hyperlink detector to jump from i18n translation keys in Alloy View XML attributes to their definition in strings.xml files.
  * Add ability to extract strings in Alloy XML files to i18n files.

For more details, see the [Studio Release Notes](http://docs.appcelerator.com/titanium/latest/#!/guide/Studio_Release_Notes).

<a name="cli"></a>
### Titanium CLI 3.4.0

This Release coincides with the release of Titanium CLI 3.4.0.

**Summary of Changes:**

  * Support building a Titanium application with the iOS 8 SDK and Xcode 6.
  * Support backwards compatibility with Titanium SDK 3.3.0 and older when building with Xcode 6 or newer.
  * Add `titanium sdk select stable` command to select the latest stable (GA) Titanium SDK.
  * Improve handling of the `config.json` file if it is corrupted.
  * Fix an issue when two processes are trying to write to `config.json` at the same time.

For more details, see the CLI [Changelog](https://github.com/appcelerator/titanium/blob/3_4_X/CHANGELOG.md).


<a name="changes"></a>
## Notice of Feature or Behavior Changes 

<a name="deprecated_android"></a>
### Android Platform

This section lists changes for the Android platform.

<a name="old_lifecycle"></a>
#### Activity Lifecycle Events

As of this Release, the activity's lifecycle events (`create`, `destroy`, `pause`, `resume`, `start` and `stop`) are deprecated and will be removed in a future release.  Use the activity's lifecycle callback properties instead.  See the [Activity Lifecycle Callbacks section](#new_lifecycle) below.


<a name="deprecated_ios"></a>
### iOS Platform

This section lists changes for the iOS platform.


<a name="permission"></a>
#### Geolocation Permission

Starting in iOS 8, if the application needs to use location services, such as using
`Titanium.Geolocation` API or display the user's location with the Map Module, add either the
[`NSLocationWhenInUseUsageDescription`](https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW26) or
[`NSLocationAlwaysUsageDescription`](https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW18)
key to the iOS plist section of the project's `tiapp.xml` file. 

    <ti:app>
        <ios>
            <plist>
                <dict>
                    <key>NSLocationAlwaysUsageDescription</key>
                    <string>
                        Specify the reason for accessing the userâ€™s location information.
                        This appears in the alert dialog when asking the user for permission to
                        access their location.
                    </string>
                </dict>
            </plist>
        </ios>
    </ti:app>

<a name="register"></a>
#### Register for User Notifications

Starting in iOS 8, the application must ask the user for permission before using local or push notifications.
For devices running iOS 8 and later, you need to register the application to use the notification services. Use the
[Titanium.App.iOS.registerUserNotificationSettings()](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.App.iOS-method-registerUserNotificationSettings)
method to enroll the application in local notification services.
Pass the method a dictionary with the `types` property set to the notification types to use.

    Ti.App.iOS.registerUserNotificationSettings({
        types: [Ti.App.iOS.USER_NOTIFICATION_TYPE_ALERT, Ti.App.iOS.USER_NOTIFICATION_TYPE_SOUND, Ti.App.iOS.USER_NOTIFICATION_TYPE_BADGE]
    });

If the application needs to use push notifications, call the
`Titanium.App.iOS.registerUserNotificationSettings()` method before calling
`Titanium.Network.registerForPushNotifications()` method.  Do not pass the notification types to use
to the `registerForPushNotifications()` method.  Instead, pass the notification types to use with
the `registerUserNotificationSettings()` method.

For iOS 7 and older, the application does not need to request the user's permission to use notifications.
For push notification, use the `registerForPushNotifications()` method and pass in the notification types to use.

<a name="features"></a>
## New Features

This section describes new features introduced in Release 3.4.0.

<a name="new_android"></a>
### Android Platform

This section lists new features and improvements only available on the Android platform.

<a name="new_lifecycle"></a>
#### Activity Lifecycle Callbacks

To be notified when an activity's lifecycle event is triggered, assign callbacks to the following activity properties:

  * [onCreate](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Android.Activity-property-onCreate)
  * [onStart](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Android.Activity-property-onStart)
  * [onResume](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Android.Activity-property-onResume)
  * [onPause](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Android.Activity-property-onPause)
  * [onStop](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Android.Activity-property-onStop)
  * [onDestroy](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Android.Activity-property-onDestroy)
  * [onRestart](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Android.Activity-property-onRestart)

These properties deprecate the activity's lifecycle events (`create`, `destroy`, `pause`, `resume`, `start` and `stop`).


<a name="http_file"></a>
#### HTTPClient file property

This Release adds support for HTTPClient's [file](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Network.HTTPClient-property-file) property.  Use this property to target a local, writable file to receive the HTTP response data.

Previously, the Android platform did not support this property.

<a name="tabgroup_activity"></a>
#### TabGroup Activity

As of this Release, you can set properties on the TabGroup's [activity](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.UI.TabGroup-property-activity) before opening the tab group, which matches the same behavior as a Window activity.

Prior to this Release, you can only set Activity properties from a TabGroup object after the tab group opens.


<a name="window_theme"></a>
#### Window theme property

Starting with this Release, the Titanium SDK introduces the [theme](http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.UI.Window-property-theme) property for Windows.  Use the  `theme` property to override the global theme for an individual window.  Set the property to the name of the theme you want to apply to the window.  The property can only be set when creating the Window object and cannot be changed after it is set.

    var win = Ti.UI.createWindow({theme: "Theme.AppCompat.Fullscreen"});

<a name="new_ios"></a>
### iOS Platform

This section lists new features and improvements only available on the iOS platform.

<a name="assets"></a>
#### Assets for iPhone 6 and iPhone 6 Plus

For the iPhone 6 and iPhone 6 Plus, the application needs to provides the following assets:

<table>
<tr><th>iOS Device</th><th>Purpose</th><th>Dimensions</th><th>DPI</th><th>File name</th><th>Titanium
folder location</th></tr>
  <tr><td>iPhone 6</td><td>Splash screen</td><td>750 x 1334</td><td>72</td><td>Default-667h@2x.png</td><td>Resources or Resources/iphone</td></tr>
  <tr><td>iPhone 6 Plus</td><td>Splash screen</td><td>1242 x 2208</td><td>72</td><td>Default-736h@3x.png</td><td>Resources or Resources/iphone</td></tr>
<tr>
</table>

If you have an existing application and want to add support for the iPhone 6 and iPhone 6 Plus,
update the application's `tiapp.xml` file by adding the `UILaunchImages` key with the form
factors you want to support to the iOS plist section.  

The following modifications add support for all supported form factors for this Release:

    <ti:app>

        <ios>
            <plist>
                <dict>
                    <key>UILaunchImages~ipad</key>
                    <array>
                        <!-- iPads -->
                        <dict>
                            <key>UILaunchImageMinimumOSVersion</key>
                            <string>7.0</string>
                            <key>UILaunchImageName</key>
                            <string>Default-Portrait</string>
                            <key>UILaunchImageOrientation</key>
                            <string>Portrait</string>
                            <key>UILaunchImageSize</key>
                            <string>{768, 1024}</string>
                        </dict>
                        <dict>
                            <key>UILaunchImageMinimumOSVersion</key>
                            <string>7.0</string>
                            <key>UILaunchImageName</key>
                            <string>Default-Landscape</string>
                            <key>UILaunchImageOrientation</key>
                            <string>Landscape</string>
                            <key>UILaunchImageSize</key>
                            <string>{768, 1024}</string>
                        </dict>
                    </array>
                    <key>UILaunchImages</key>
                    <array>
                        <!-- iPhone 4/4S -->
                        <dict>
                            <key>UILaunchImageMinimumOSVersion</key>
                            <string>7.0</string>
                            <key>UILaunchImageName</key>
                            <string>Default</string>
                            <key>UILaunchImageOrientation</key>
                            <string>Portrait</string>
                            <key>UILaunchImageSize</key>
                            <string>{320, 480}</string>
                        </dict>
                        <!-- iPhone 5/5C/5S -->
                        <dict>
                            <key>UILaunchImageMinimumOSVersion</key>
                            <string>7.0</string>
                            <key>UILaunchImageName</key>
                            <string>Default-568h</string>
                            <key>UILaunchImageOrientation</key>
                            <string>Portrait</string>
                            <key>UILaunchImageSize</key>
                            <string>{320, 568}</string>
                        </dict>
                        <!-- iPhone 6 -->
                        <dict>
                            <key>UILaunchImageMinimumOSVersion</key>
                            <string>8.0</string>
                            <key>UILaunchImageName</key>
                            <string>Default-667h</string>
                            <key>UILaunchImageOrientation</key>
                            <string>Portrait</string>
                            <key>UILaunchImageSize</key>
                            <string>{375, 667}</string>
                        </dict>
                        <!-- iPhone 6 Plus -->
                        <dict>
                            <key>UILaunchImageMinimumOSVersion</key>
                            <string>8.0</string>
                            <key>UILaunchImageName</key>
                            <string>Default-736h</string>
                            <key>UILaunchImageOrientation</key>
                            <string>Portrait</string>
                            <key>UILaunchImageSize</key>
                            <string>{414, 736}</string>
                        </dict>
                    </array>
                </dict>
            </plist>
        </ios>

    </ti:app>


<a name="camera"></a>
#### Camera

Starting with this Release, the application can control rotating the camera preview on an iPad by passing the
`autorotate` property to the `Titanium.Media.showCamera()` method.  By default, the property is set
to `true` allowing the camera preview to rotate.  Set the property to `false` to disable rotating the camera preview.

Prior to this Release, the camera preview would always rotate.

<a name="geolocation"></a>
#### Geolocation

Starting with this Release, the application monitor the
[`authorization`]((http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Geolocation-event-authorization)
event of the `Titanium.Geolocation` class.  The event triggers when the application's authorization status changes.

This API is only available for iOS 8 and later.


<a name="interactive"></a>
#### Interactive Local Notifications

Starting with this Release, you can create interactive local notifications, where users can respond to application notifications without launching the application to the foreground.  The user needs to reveal notification actions in the notification, then press a notification action to respond to the notification.  This feature is available on devices running iOS 8 or later.

For more information, see the "Create an Interactive Notification" section in the [iOS Local Notifications guide](http://docs.appcelerator.com/titanium/latest/#!/guide/iOS_Local_Notifications).

<a name="touch_id"></a>
#### Touch ID Module

The Touch ID module allows an application to use the iOS Touch ID security mechanism.  Touch ID is a security mechanism that uses a fingerprint to authenticate the user. The fingerprint sensor is located in the Home button of the device. Users can use their fingerprint instead of entering their passcode for authentication.

For more information, see the [Touch ID module API reference](http://docs.appcelerator.com/titanium/latest/#!/api/Modules.TouchId).

<a name="known_issues"></a>
## Known Issues

<a name="devices_window"></a>
### Devices Window Launched Instead of Organizer Window

When packaging an application for the iTunes App Store, the **Devices** window is launched instead of the **Organizer** window ([TIMOB-17600](https://jira.appcelerator.org/browse/TIMOB-17600)).

To workaround this issue, you need to manually launch the Xcode **Organizer** window.  Launch Xcode 6, and from the menu bar, select **Window** > **Organizer**.

<a name="ios_sim"></a>
### iOS Simulator Issues

When building an application to the iOS simulator, the simulator may hang on a black screen for a while before showing the splash screen image, then return to the home screen ([TIMOB-17601](https://jira.appcelerator.org/browse/TIMOB-17601)).

<a name="apis"></a>
## API Changes

 name="new_apis"></a>

<h2>New APIs</h2>

The following APIs are new or have expanded platform support in Release
3.4.0.

<table>
<tr><th>API</th><th>Type</th><th>Notes</th></tr>
  <tr><td>Modules.TouchId</td><td>module</td><td><p>Allows a Titanium application to use the iOS Touch ID authentication mechanism. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.getOnCreate</td><td>method</td><td><p>Gets the value of the onCreate property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.getOnDestroy</td><td>method</td><td><p>Gets the value of the onDestroy property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.getOnPause</td><td>method</td><td><p>Gets the value of the onPause property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.getOnRestart</td><td>method</td><td><p>Gets the value of the onRestart property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.getOnResume</td><td>method</td><td><p>Gets the value of the onResume property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.getOnStart</td><td>method</td><td><p>Gets the value of the onStart property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.getOnStop</td><td>method</td><td><p>Gets the value of the onStop property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.onCreate</td><td>property</td><td><p>Callback function called when the Android activity is created.  (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.onDestroy</td><td>property</td><td><p>Callback function called when the Android activity is destroyed.  (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.onPause</td><td>property</td><td><p>Callback function called when the Android activity is paused.  (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.onRestart</td><td>property</td><td><p>Callback function called when the Android activity is restarted.  (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.onResume</td><td>property</td><td><p>Callback function called when the Android activity is resumed.  (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.onStart</td><td>property</td><td><p>Callback function called when the Android activity is started.  (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.onStop</td><td>property</td><td><p>Callback function called when the Android activity is stopped. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.setOnCreate</td><td>method</td><td><p>Sets the value of the onCreate property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.setOnDestroy</td><td>method</td><td><p>Sets the value of the onDestroy property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.setOnPause</td><td>method</td><td><p>Sets the value of the onPause property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.setOnRestart</td><td>method</td><td><p>Sets the value of the onRestart property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.setOnResume</td><td>method</td><td><p>Sets the value of the onResume property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.setOnStart</td><td>method</td><td><p>Sets the value of the onStart property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.Activity.setOnStop</td><td>method</td><td><p>Sets the value of the onStop property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND</td><td>property</td><td><p>The action will execute in background.  Use with the
activationMode property.  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_FOREGROUND</td><td>property</td><td><p>The action will launch the application and execute in the foreground.
Use with the activationMode property.  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.USER_NOTIFICATION_TYPE_ALERT</td><td>property</td><td><p>The application may display an alert upon a notification being received. Use with the types property.  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.USER_NOTIFICATION_TYPE_BADGE</td><td>property</td><td><p>The application may badge its icon upon a notification being received. Use with the types property.  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.USER_NOTIFICATION_TYPE_NONE</td><td>property</td><td><p>The application may not present any UI upon a notification being received. Use with the types property.  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.USER_NOTIFICATION_TYPE_SOUND</td><td>property</td><td><p>The application may play a sound upon a notification being received. Use with the types property.  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.UserNotificationAction</td><td>object</td><td><p>An action the user selects in response to an interactive notification. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.UserNotificationCategory</td><td>object</td><td><p>A set of notification actions to associate with a notification. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.applicationOpenSettingsURL</td><td>property</td><td><p>Returns a URL to open the app's settings. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.createUserNotificationAction</td><td>method</td><td><p>Creates and returns an instance of Titanium.App.iOS.UserNotificationAction. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.createUserNotificationCategory</td><td>method</td><td><p>Creates and returns an instance of Titanium.App.iOS.UserNotificationCategory. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.currentUserNotificationSettings</td><td>property</td><td><p>Notification types and user notification categories the application is registered to use (available on iOS 8 and later).  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.getApplicationOpenSettingsURL</td><td>method</td><td><p>Gets the value of the applicationOpenSettingsURL property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.getCurrentUserNotificationSettings</td><td>method</td><td><p>Gets the value of the currentUserNotificationSettings property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.registerUserNotificationSettings</td><td>method</td><td><p>Registers the application to use the requested notification types and categories (for devices running iOS 8 or later).  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.App.iOS.usernotificationsettings</td><td>event</td><td><p>Fired when the user notification settings are registered (available for iOS 8 and later).  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Geolocation.AUTHORIZATION_ALWAYS</td><td>property</td><td><p>A locationServicesAuthorization value indicating that the application is authorized to start location services at any time. This authorization includes the use of all location services, including monitoring regions and significant location changes.  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Geolocation.AUTHORIZATION_WHEN_IN_USE</td><td>property</td><td><p>A locationServicesAuthorization value indicating that the application is authorized to start most location services only while running in the foreground.  (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Geolocation.authorization</td><td>event</td><td><p>Fired when changes are made to the authorization status for location services. Available in iOS 8.0 and later. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.HTTPClient.file</td><td>property</td><td><p>Target local file to receive data. (Added support for Android.)</p></td></tr>
  <tr><td>Titanium.UI.Window.getTheme</td><td>method</td><td><p>Gets the value of the theme property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.Window.theme</td><td>property</td><td><p>Name of the theme to apply to the window. (New API, supported on Android.)</p></td></tr>
<tr>
</table>

<a name="deprecated_apis"></a>

<h2>Deprecated APIs</h2>

The following APIs are deprecated in Release 3.4.0.

<table>
<tr><th>API</th><th>Type</th><th>Notes</th></tr>
  <tr><td>Titanium.Android.Activity.create</td><td>event</td><td><p>Use the onCreate property instead.</p></td></tr>
  <tr><td>Titanium.Android.Activity.destroy</td><td>event</td><td><p>Use the onDestroy property instead.</p></td></tr>
  <tr><td>Titanium.Android.Activity.pause</td><td>event</td><td><p>Use the onPause property instead.</p></td></tr>
  <tr><td>Titanium.Android.Activity.resume</td><td>event</td><td><p>Use the onResume property instead.</p></td></tr>
  <tr><td>Titanium.Android.Activity.start</td><td>event</td><td><p>Use the onStart property instead.</p></td></tr>
  <tr><td>Titanium.Android.Activity.stop</td><td>event</td><td><p>Use the onStop property instead.</p></td></tr>
<tr>
</table>

<a name="removed_apis"></a>

### Removed APIs

The following APIs have been removed in Release 3.4.0.

<table>
<tr><th>API</th><th>Type</th><th>Notes</th></tr>
  <tr><td>Titanium.Network.HTTPClient.addKeyManager</td><td>method</td><td></td></tr>
  <tr><td>Titanium.Network.HTTPClient.addTrustManager</td><td>method</td><td></td></tr>
<tr>
</table>


