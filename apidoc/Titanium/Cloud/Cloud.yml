---
name: Titanium.Cloud
summary: |
    The top level Cloud module.
description: |
    The Cloud module is used for connecting your application with Appcelerator Cloud Services (ACS).

    Note that this module is not included in the Titanium namespace, but it is bundled with the Titanium SDK as of
    version 2.0.0. To use it, you must require it, like this:

            var Cloud = require('ti.cloud');

    See [Getting Started: Quickstart Guide](http://cloud.appcelerator.com/docs/quickstart)
    for required steps to set up your application for ACS.

    Your app must prove that it is allowed to talk to ACS. This keeps your data secure by preventing anyone from
    making requests to ACS that impersonate your app. ACS provides secure authentication via 2-Legged OAuth.
    This is a process by which a key and secret are used to sign each request made by your app. When the ACS
    server receives your request, the secret is used along with the data sent in the request to calculate another
    signature. If sent signature and calculated signature match, the request will be processed.

    An alternate method to authenticate API requests to ACS is to supply an app key with each request

    Titanium Studio will create a pair of keys (Development and Production) for each Titanium application depending on the
    user preference specified during new project creation. This pair of keys will be stored in `tiapp.xml` and one of the
    keys will be used during application build depending on the build type (development or production).

    The supported properties in `tiapp.xml` are:

        <property name="acs-api-key-development" type="string">YOUR DEVELOPMENT API KEY HERE</property>
        <property name="acs-oauth-key-development" type="string">YOUR DEVELOPMENT OAUTH KEY HERE</property>
        <property name="acs-oauth-secret-development" type="string">YOUR DEVELOPMENT OAUTH SECRET HERE</property>
        <property name="acs-base-url-development" type="string">DEVELOPMENT API URL HERE</property>

        <property name="acs-api-key-production" type="string">YOUR PRODUCTION API KEY HERE</property>
        <property name="acs-oauth-key-production" type="string">YOUR PRODUCTION OAUTH KEY HERE</property>
        <property name="acs-oauth-secret-production" type="string">YOUR PRODUCTION OAUTH SECRET HERE</property>
        <property name="acs-base-url-production" type="string">PRODUCTION API URL HERE</property>

        <property name="acs-api-key" type="string">YOUR API KEY HERE</property>
        <property name="acs-oauth-key" type="string">YOUR OAUTH KEY HERE</property>
        <property name="acs-oauth-secret" type="string">YOUR OAUTH SECRET HERE</property><property name="acs-base-url" type="string">API URL HERE</property>

    The value for each setting that will be used is based on the following rules:

    * OAuth is preferred over apiKey. If both the OAuth key and OAuth secret are provided then OAuth will be used; otherwise, apiKey will be used.
    * If a deployment-specific setting is provided (production or development) then that value will be used for the current deployment environment.
    * Properties set in the application JavaScript will override any settings in `tiapp.xml`

    Order of precedence is as follows:

    1. Application JavaScript deployment-specific property (e.g. Cloud.apiKeyDevelopment)
    2. Application JavaScript property (e.g. Cloud.apiKey)
    3. `tiapp.xml` deployment-specific setting (e.g. acs-api-key-development)
    4. `tiapp.xml` setting (e.g. acs-api-key)

extends: Titanium.Module
excludes: { methods: [ 'addEventListener', 'fireEvent', 'removeEventListener',  ] }
since: "2.0"
platforms: [android, iphone, ipad]
properties:
  - name: baseURL
    summary: Base URL for accessing ACS. Overrides `acs-base-url` property in `tiapp.xml`.
    type: String
  - name: baseURLDevelopment
    summary: Base URL for accessing ACS. Overrides `acs-base-url-development` property in `tiapp.xml`.
    type: String
  - name: baseURLProduction
    summary: Base URL for accessing ACS. Overrides `acs-base-url-production` property in `tiapp.xml`.
    type: String
  - name: apiKey
    summary: Registered application key. Overrides `acs-api-key` property in `tiapp.xml`.
    type: String
  - name: apiKeyDevelopment
    summary: Registered application key. Overrides `acs-api-key-development` property in `tiapp.xml`.
    type: String
  - name: apiKeyProduction
    summary: Registered application key. Overrides `acs-api-key-production` property in `tiapp.xml`.
    type: String
  - name: consumerKey
    summary: Registered OAuth consumer key. Overrides `acs-oauth-key` property in `tiapp.xml`.
    type: String
  - name: consumerKeyDevelopment
    summary: Registered OAuth consumer key. Overrides `acs-oauth-key-development` property in `tiapp.xml`.
    type: String
  - name: consumerKeyProduction
    summary: Registered OAuth consumer key. Overrides `acs-oauth-key-production` property in `tiapp.xml`.
    type: String
  - name: consumerSecret
    summary: Registered OAuth consumer key. Overrides `acs-oauth-secret` property in `tiapp.xml`.
    type: String
  - name: consumerSecretDevelopment
    summary: Registered OAuth consumer key. Overrides `acs-oauth-secret-development` property in `tiapp.xml`.
    type: String
  - name: consumerSecretProduction
    summary: Registered OAuth consumer key. Overrides `acs-oauth-secret-production` property in `tiapp.xml`.
    type: String
  - name: useSecure
    summary: Indicates whether to use SSL when sending requests to ACS.
    type: Boolean
    default: true
  - name: debug
    summary: Indicates if internal debug logging should be output to the console.
    type: Boolean
    default: false
  - name: onsendstream
    summary: Function to be called at regular intervals as the request data is being transmitted.
    description: |
        Set this property before calling any ACS method for which you want to track the transmission.
                
        When you are done tracking the transmission, set this to null.
    type: Callback<CloudStreamProgress>
  - name: ondatastream
    summary: Function to be called at regular intervals as the request data is being received.
    description: |
        Set this property before calling any ACS method for which you want to track the transmission.
        
        When you are done tracking the transmission, set this to null.
    type: Callback<CloudStreamProgress>

examples:
  - title: Override Base URL Example
    example: |
        This example overrides the base URL.

            Cloud.baseURL = '\<ACS CLOUD SERVICES URL\>';
            Cloud.baseURLDevelopment = '\<ACS CLOUD SERVICES DEVELOPMENT URL\>';
            Cloud.baseURLProduction = '\<ACS CLOUD SERVICES PRODUCTION URL\>';

  - title: Override API Key Example
    example: |
        This example overrides the API key.

            Cloud.apiKey = '\<YOUR APP API KEY\>';
            Cloud.apiKeyDevelopment = '\<YOUR DEVELOPMENT API KEY\>';
            Cloud.apiKeyProduction = '\<YOUR PRODUCTION API KEY\>';

  - title: Override OAuth Example
    example: |
        This example overrides the consumer key and secret.

            Cloud.consumerKey = '\<YOUR CONSUMER KEY\>';
            Cloud.consumerSecret = '\<YOUR CONSUMER SECRET\>';
            Cloud.consumerKeyDevelopment = '\<YOUR DEVELOPMENT CONSUMER KEY\>';
            Cloud.consumerSecretDevelopment = '\<YOUR DEVELOPMENT CONSUMER SECRET\>';
            Cloud.consumerKeyProduction = '\<YOUR PRODUCTION CONSUMER KEY\>';
            Cloud.consumerSecretDevelopment = '\<YOUR PRODUCTION CONSUMER SECRET\>';
---
name: CloudStreamProgress
summary: Argument passed to the callback as a request is transmitted or received.
properties:
  - name: progress
    summary: A value from 0.0-1.0 with the progress of the exchange.
    type: Number
  - name: url
    summary: The URL for the request, to help you identify it.
    type: String