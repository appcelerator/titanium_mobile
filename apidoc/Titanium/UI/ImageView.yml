---
name: Titanium.UI.ImageView
summary: An Image View is used to display an image or a series of images in an animation. 
description: |
    If you specify a `width` and/or `height` property for the image view, the image will be 
    scaled to fit into this space while maintaining its original aspect ratio.

    Use the <Titanium.UI.createImageView> method to create an image view.
extends: Titanium.UI.View
since: "0.9"
methods:
  - name: pause
    summary: Pause a running animation.
    platforms: [android, iphone, ipad]
  - name: start
    summary: Start the image animation. This method only works if you set multiple images.
    platforms: [android, iphone, ipad]
  - name: stop
    summary: Stop a running animation and reset the index to the first image.
    platforms: [android, iphone, ipad]
  - name: toBlob
    summary: Return the image as a Blob object.
    platforms: [android, iphone, ipad]
events:
  - name: change
    summary: Fired for each frame changed during an animation.
    properties:
      - name: index
        summary: the index of the image frame being displayed
  - name: load
    summary: Fired when either the initial image and/or all of the images in an animation are loaded.
    properties:
      - name: state
        summary: either `url` to indicate the url property is loaded or `images` when all the images are loaded
  - name: start
    summary: Fired when the animation starts.
  - name: stop
    summary: Fired when the animation stops.
  - name: error
    summary: Fired when an image fails to load.
    properties:
      - name: image
        summary: The url of the image that failed to load.
properties:
  - name: animating
    summary: |
        `true` if the animation is running.
    type: Boolean
    permission: read-only
  - name: canScale
    summary: Allow the user to scale the image (using pinch-zoom or the optional zoom controls).
    description: See also [enableZoomControls](Titanium.UI.ImageView.enableZoomControls).
    type: Boolean
    default: false
    platforms: [android]
  - name: decodeRetries
    summary: |
        Number of times to retry decoding the bitmap at this URL.
    default: 5
    platforms: [android]
    since: "1.7.0"
    type: Number
  - name: defaultImage
    summary: url to the default image to display while loading a remote image
    type: String
  - name: duration
    summary: amount of time in milliseconds to animate one cycle
    type: Number
  - name: enableZoomControls
    summary: Show zoom controls when the user touches the image view.
    description: |
        Zoom controls are only displayed if [canScale](Titanium.UI.ImageView.canScale) 
        is `true`.
    type: Boolean
    platforms: [android]
    since: "1.3.0"
    default: true
  - name: hires
    summary: |
        Indicates whether or not the source image is in 2x resolution for Retina displays. 
        Use for remote images ONLY.
    platforms: [iphone, ipad, mobileweb]
    type: Boolean
  - name: image
    summary: | 
        Image to display. Specify using a local file path or URL, or pass a `Blob` or 
        `File` object containing image data.
    type: [ String, Titanium.Blob, Titanium.Filesystem.File ]
  - name: images
    summary: Array of images to display in an animation. Accepts the same types as `image`.
    type: Array<Object>
  - name: paused
    summary: Boolean value indicating if the animation is paused.
    type: Boolean
    permission: read-only
  - name: preventDefaultImage
    summary: Set to `true` to **disable** display of the default image while loading a remote image.
    type: Boolean
  - name: repeatCount
    summary: Number of times to repeat the image animation.
    type: Number
  - name: reverse
    summary: Boolean value indicating if the animation should happen in reverse (from last to first).
    type: Boolean
    default: false
  - name: url
    summary: |
        URL to the image to display. Deprecated: use [image](Titanium.UI.ImageView.image) instead.
    type: String
    deprecated: {since: "1.5.0"}
examples:
  - title: Basic Image View
    example: |
        In this example, we create a simple image view:
        
            var image = Titanium.UI.createImageView({url:'myimage.png'});
            view.add(image);
