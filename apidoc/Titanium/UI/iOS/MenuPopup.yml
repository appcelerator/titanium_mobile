---
name: Titanium.UI.iOS.MenuPopup
summary: |
    A menu popup provides the ability to create custom tooltip options using the `items` property
    covering the native `UIMenuController` class.

    See also:

    * [iOS Developer Library: UIMenuController](https://developer.apple.com/documentation/uikit/uimenucontroller)

platforms: [iphone,ipad]
since: "5.2.0"
deprecated:
    since: "8.1.0"
    notes: "Use the cross-platform <Titanium.UI.MenuPopup> instead."
extends: Titanium.Proxy

properties:
  - name: items
    summary: The items of the menu popup.
    description: |
        The items will be shown as soon in the menu popup when the `show` method is called.
        To hide them again, use the `hide` method in conjunction.
    type: [String]

methods:
  - name: show
    summary: Shows the menu popup.
    parameters:
      - name: params
        summary: Includes options how the menu popup should be shown.
        type: MenuPopupShowParams
        optional: false

  - name: hide
    summary: Hides the menu popup.
    parameters:
      - name: params
        summary: Includes options how the menu popup should be hidden.
        type: MenuPopupHideParams
        optional: true

  - name: isVisible
    summary: Indicates whether the menu popup is currently visible.

events:
  - name: click
    summary: Fired when the user clicks at one of the menu popup items.
    description: |
        This event provides the properties `title` and `index` which relate to the name and position
        of the clicked item inside the `items` property.
    properties:
      - name: index
        summary: The index of the clicked item.
        type: Number

      - name: title
        summary: The title of the clicked item.
        type: String

examples:
  - title: Example using multiple `items` and a `click` event.
    example: |
        The example below creates a new menu popup and shows it when the user clicks on the button.

            var win = Ti.UI.createWindow({
                backgroundColor: "#fff",
            });

            var button = Ti.UI.createButton({
                title: "Show options"
            });

            win.add(button);

            var menu = Ti.UI.iOS.createMenuPopup({
                items: ["Option 1", "Option 2"]
            });

            menu.addEventListener("click", function(e) {
                alert(e);
            });

            button.addEventListener("click", function() {
                menu.show({
            	    view: button
                });
            });

            win.open();
